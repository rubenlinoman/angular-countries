{"ast":null,"code":"var _class;\nimport { switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/countries.service\";\nfunction CountryPageComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtext(1, \" Espere, por favor \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CountryPageComponent {\n  constructor(activadedRoute, countriesService, router) {\n    this.activadedRoute = activadedRoute;\n    this.countriesService = countriesService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.activadedRoute.params.pipe(switchMap(({\n      id\n    }) => this.countriesService.searchCountryByAlphaCode(id))).subscribe(country => {\n      if (!country) return this.router.navigateByUrl('');\n      return this.country = country;\n    });\n  }\n}\n_class = CountryPageComponent;\n_class.ɵfac = function CountryPageComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CountriesService), i0.ɵɵdirectiveInject(i1.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-country-page\"]],\n  decls: 8,\n  vars: 1,\n  consts: [[1, \"row\"], [1, \"col-12\"], [1, \"alert\", \"alert-info\"]],\n  template: function CountryPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CountryPageComponent_ng_template_0_Template, 2, 0, \"ng-template\");\n      i0.ɵɵelementStart(1, \"div\")(2, \"div\", 0)(3, \"div\", 1)(4, \"h2\");\n      i0.ɵɵtext(5, \"Pa\\u00EDs: \");\n      i0.ɵɵelementStart(6, \"strong\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate(ctx.country == null ? null : ctx.country.name == null ? null : ctx.country.name.common);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["switchMap","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CountryPageComponent","constructor","activadedRoute","countriesService","router","ngOnInit","params","pipe","id","searchCountryByAlphaCode","subscribe","country","navigateByUrl","ɵɵdirectiveInject","i1","ActivatedRoute","i2","CountriesService","Router","selectors","decls","vars","consts","template","CountryPageComponent_Template","rf","ctx","ɵɵtemplate","CountryPageComponent_ng_template_0_Template","ɵɵadvance","ɵɵtextInterpolate","name","common"],"sources":["/media/rubenlinoman/DATOS/Formacion_angular/Angular/04-countryApp/src/app/countries/pages/country-page/country-page.component.ts","/media/rubenlinoman/DATOS/Formacion_angular/Angular/04-countryApp/src/app/countries/pages/country-page/country-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CountriesService } from '../../services/countries.service';\nimport { switchMap } from 'rxjs';\nimport { Country } from '../../interfaces/country';\n\n@Component({\n  selector: 'app-country-page',\n  templateUrl: './country-page.component.html',\n  styles: [\n  ]\n})\nexport class CountryPageComponent implements OnInit {\n\n  public country?: Country;\n\n  constructor(\n    private activadedRoute: ActivatedRoute,\n    private countriesService: CountriesService,\n    private router: Router\n  ) {}\n  \n  ngOnInit(): void {\n    this.activadedRoute.params\n    .pipe(\n      switchMap(({id}) => this.countriesService.searchCountryByAlphaCode(id)),\n    )\n    .subscribe(country => {\n      if (!country) return this.router.navigateByUrl('');      \n      return this.country = country;\n    });\n  }\n\n}\n","\n<ng-template>\n  <div class=\"alert alert-info\">\n    Espere, por favor\n  </div>\n</ng-template>\n\n<div><div class=\"row\">\n  <div class=\"col-12\">\n    <h2>País: <strong>{{country?.name?.common}}</strong></h2>\n  </div>\n</div>\n\n</div>"],"mappings":";AAGA,SAASA,SAAS,QAAQ,MAAM;;;;;;ICD9BC,EAAA,CAAAC,cAAA,aAA8B;IAC5BD,EAAA,CAAAE,MAAA,0BACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;ADQR,OAAM,MAAOC,oBAAoB;EAI/BC,YACUC,cAA8B,EAC9BC,gBAAkC,EAClCC,MAAc;IAFd,KAAAF,cAAc,GAAdA,cAAc;IACd,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,MAAM,GAANA,MAAM;EACb;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACH,cAAc,CAACI,MAAM,CACzBC,IAAI,CACHZ,SAAS,CAAC,CAAC;MAACa;IAAE,CAAC,KAAK,IAAI,CAACL,gBAAgB,CAACM,wBAAwB,CAACD,EAAE,CAAC,CAAC,CACxE,CACAE,SAAS,CAACC,OAAO,IAAG;MACnB,IAAI,CAACA,OAAO,EAAE,OAAO,IAAI,CAACP,MAAM,CAACQ,aAAa,CAAC,EAAE,CAAC;MAClD,OAAO,IAAI,CAACD,OAAO,GAAGA,OAAO;IAC/B,CAAC,CAAC;EACJ;;SAnBWX,oBAAoB;;mBAApBA,MAAoB,EAAAJ,EAAA,CAAAiB,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAnB,EAAA,CAAAiB,iBAAA,CAAAG,EAAA,CAAAC,gBAAA,GAAArB,EAAA,CAAAiB,iBAAA,CAAAC,EAAA,CAAAI,MAAA;AAAA;;QAApBlB,MAAoB;EAAAmB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXjC7B,EAAA,CAAA+B,UAAA,IAAAC,2CAAA,sBAIc;MAEdhC,EAAA,CAAAC,cAAA,UAAK;MAEGD,EAAA,CAAAE,MAAA,kBAAM;MAAAF,EAAA,CAAAC,cAAA,aAAQ;MAAAD,EAAA,CAAAE,MAAA,GAAyB;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MAAlCH,EAAA,CAAAiC,SAAA,GAAyB;MAAzBjC,EAAA,CAAAkC,iBAAA,CAAAJ,GAAA,CAAAf,OAAA,kBAAAe,GAAA,CAAAf,OAAA,CAAAoB,IAAA,kBAAAL,GAAA,CAAAf,OAAA,CAAAoB,IAAA,CAAAC,MAAA,CAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}