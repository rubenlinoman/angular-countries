{"ast":null,"code":"var _class;\nimport { catchError, map, of, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CountriesService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://restcountries.com/v3.1';\n    this.cacheStore = {\n      byCapital: {\n        term: '',\n        countries: []\n      },\n      byCountries: {\n        term: '',\n        countries: []\n      },\n      byRegion: {\n        region: '',\n        countries: []\n      }\n    };\n    this.loadFromLocalStorage();\n  }\n  saveToLocalStorage() {\n    localStorage.setItem('cacheStore', JSON.stringify(this.cacheStore));\n  }\n  loadFromLocalStorage() {\n    if (!localStorage.getItem('cacheStore')) return;\n    this.cacheStore = JSON.parse(localStorage.getItem('cacheStore'));\n  }\n  getCountriesRequest(url) {\n    return this.http.get(url).pipe(catchError(error => of([])));\n  }\n  searchCountryByAlphaCode(code) {\n    const url = `${this.apiUrl}/alpha/${code}`;\n    return this.http.get(url).pipe(map(countries => countries.length > 0 ? countries[0] : null), catchError(error => of(null)) // Devolver un arreglo vacío para seguir con el programa en caso de error\n    );\n  }\n\n  searchCapital(term) {\n    const url = `${this.apiUrl}/capital/${term}`;\n    return this.getCountriesRequest(url).pipe(tap(countries => this.cacheStore.byCapital = {\n      term,\n      countries\n    }), tap(() => this.saveToLocalStorage()));\n  }\n  searchCountry(term) {\n    const url = `${this.apiUrl}/name/${term}`;\n    return this.getCountriesRequest(url).pipe(tap(countries => this.cacheStore.byCountries = {\n      term,\n      countries\n    }), tap(() => this.saveToLocalStorage()));\n  }\n  searchRegion(region) {\n    const url = `${this.apiUrl}/region/${region}`;\n    return this.getCountriesRequest(url).pipe(tap(countries => this.cacheStore.byRegion = {\n      region,\n      countries\n    }), tap(() => this.saveToLocalStorage()));\n  }\n}\n_class = CountriesService;\n_class.ɵfac = function CountriesService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","map","of","tap","CountriesService","constructor","http","apiUrl","cacheStore","byCapital","term","countries","byCountries","byRegion","region","loadFromLocalStorage","saveToLocalStorage","localStorage","setItem","JSON","stringify","getItem","parse","getCountriesRequest","url","get","pipe","error","searchCountryByAlphaCode","code","length","searchCapital","searchCountry","searchRegion","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/media/rubenlinoman/DATOS/Formacion_angular/Angular/04-countryApp/src/app/countries/services/countries.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, catchError, delay, map, of, tap } from 'rxjs';\n\n\nimport { Country } from '../interfaces/country';\nimport { CacheStore } from '../interfaces/cache-store.interfaces';\nimport { Region } from '../interfaces/region.type';\n\n@Injectable({providedIn: 'root'})\nexport class CountriesService {\n\n  private apiUrl: string = 'https://restcountries.com/v3.1';\n\n  public cacheStore: CacheStore = {\n    byCapital: {term: '', countries: []},\n    byCountries: {term: '', countries: []},\n    byRegion: {region: '', countries: []}\n  }\n\n  constructor(private http: HttpClient) {\n    this.loadFromLocalStorage();\n  }\n\n  private saveToLocalStorage() {\n    localStorage.setItem('cacheStore', JSON.stringify(this.cacheStore));\n  }\n\n  private loadFromLocalStorage() {\n    if (!localStorage.getItem('cacheStore')) return;\n\n    this.cacheStore = JSON.parse(localStorage.getItem('cacheStore')!);\n  }\n\n  private getCountriesRequest(url: string): Observable<Country[]> {\n    return this.http.get<Country[]>(url)\n    .pipe(\n      catchError(error => of([])), // Devolver un arreglo vacío para seguir con el programa en caso de error   \n    );\n  }\n\n  searchCountryByAlphaCode(code: string): Observable<Country | null> {\n\n    const url = `${this.apiUrl}/alpha/${code}`;\n\n    return this.http.get<Country[]>(url)\n      .pipe(\n        map(countries => countries.length > 0 ? countries[0] : null),\n        catchError(error => of(null)) // Devolver un arreglo vacío para seguir con el programa en caso de error\n      );\n  }\n\n  searchCapital(term: string): Observable<Country[]> {\n    const url = `${this.apiUrl}/capital/${term}`;\n\n    return this.getCountriesRequest(url)\n      .pipe(\n        tap(countries => this.cacheStore.byCapital = {term, countries}),\n        tap(() => this.saveToLocalStorage())\n      );\n  }\n\n  searchCountry(term: string): Observable<Country[]> {\n    const url = `${this.apiUrl}/name/${term}`;\n\n    return this.getCountriesRequest(url)\n    .pipe(\n      tap(countries => this.cacheStore.byCountries = {term, countries}),\n      tap(() => this.saveToLocalStorage())\n    );\n  }\n\n  searchRegion(region: Region): Observable<Country[]> {\n    const url = `${this.apiUrl}/region/${region}`;\n\n    return this.getCountriesRequest(url)\n    .pipe(\n      tap(countries => this.cacheStore.byRegion = {region, countries}),\n      tap(() => this.saveToLocalStorage())\n    );\n  }\n  \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}