{"ast":null,"code":"var _class;\nimport { EventEmitter } from '@angular/core';\nimport { Subject, debounceTime } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class SearchBoxComponent {\n  constructor() {\n    this.debouncer = new Subject();\n    this.placeholder = '';\n    this.initialValue = '';\n    this.onValue = new EventEmitter();\n    this.onDebounce = new EventEmitter();\n  }\n  ngOnInit() {\n    this.debouncerSuscription = this.debouncer.pipe(debounceTime(300)).subscribe(value => {\n      this.onDebounce.emit(value);\n    });\n  }\n  ngOnDestroy() {\n    this.debouncerSuscription?.unsubscribe();\n  }\n  emitValue(value) {\n    this.onValue.emit(value);\n  }\n  onKeyPress(searchTerm) {\n    this.debouncer.next(searchTerm);\n  }\n}\n_class = SearchBoxComponent;\n_class.ɵfac = function SearchBoxComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"shared-search-box\"]],\n  inputs: {\n    placeholder: \"placeholder\",\n    initialValue: \"initialValue\"\n  },\n  outputs: {\n    onValue: \"onValue\",\n    onDebounce: \"onDebounce\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"value\", \"placeholder\", \"keyup\"], [\"txtInput\", \"\"]],\n  template: function SearchBoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"input\", 0, 1);\n      i0.ɵɵlistener(\"keyup\", function SearchBoxComponent_Template_input_keyup_0_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onKeyPress(_r0.value));\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"value\", ctx.initialValue)(\"placeholder\", ctx.placeholder);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["EventEmitter","Subject","debounceTime","SearchBoxComponent","constructor","debouncer","placeholder","initialValue","onValue","onDebounce","ngOnInit","debouncerSuscription","pipe","subscribe","value","emit","ngOnDestroy","unsubscribe","emitValue","onKeyPress","searchTerm","next","selectors","inputs","outputs","decls","vars","consts","template","SearchBoxComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","SearchBoxComponent_Template_input_keyup_0_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","ɵɵelementEnd","ɵɵproperty"],"sources":["/media/rubenlinoman/DATOS/Formacion_angular/Angular/04-countryApp/src/app/shared/components/search-box/search-box.component.ts","/media/rubenlinoman/DATOS/Formacion_angular/Angular/04-countryApp/src/app/shared/components/search-box/search-box.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output, OnInit, OnDestroy } from '@angular/core';\nimport { Subject, debounceTime, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'shared-search-box',\n  templateUrl: './search-box.component.html',\n  styles: [\n  ]\n})\nexport class SearchBoxComponent implements OnInit, OnDestroy {\n\n  private debouncer: Subject<string> = new Subject<string>();\n  private debouncerSuscription?: Subscription;\n\n  @Input()\n  public placeholder: string = '';\n\n  @Input()\n  public initialValue: string = '';\n\n  @Output()\n  public onValue = new EventEmitter<string>();\n\n  @Output()\n  public onDebounce = new EventEmitter<string>();\n\n  ngOnInit(): void {\n    this.debouncerSuscription = this.debouncer\n    .pipe(\n      debounceTime(300)\n    )\n    .subscribe( value => {\n      this.onDebounce.emit( value );\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.debouncerSuscription?.unsubscribe();\n  }\n\n  emitValue( value: string ):void {\n    this.onValue.emit( value );\n  }\n\n  onKeyPress( searchTerm: string ) {\n    this.debouncer.next( searchTerm );\n  }\n\n}","<!-- (keyup.enter)=\"emitValue( txtInput.value )\" -->\n<input\n  type=\"text\"\n  class=\"form-control\"\n  [value]=\"initialValue\"\n  [placeholder]=\"placeholder\"\n  (keyup)=\"onKeyPress( txtInput.value )\"\n  #txtInput\n>"],"mappings":";AAAA,SAAoBA,YAAY,QAA0C,eAAe;AACzF,SAASC,OAAO,EAAEC,YAAY,QAAsB,MAAM;;AAQ1D,OAAM,MAAOC,kBAAkB;EAN/BC,YAAA;IAQU,KAAAC,SAAS,GAAoB,IAAIJ,OAAO,EAAU;IAInD,KAAAK,WAAW,GAAW,EAAE;IAGxB,KAAAC,YAAY,GAAW,EAAE;IAGzB,KAAAC,OAAO,GAAG,IAAIR,YAAY,EAAU;IAGpC,KAAAS,UAAU,GAAG,IAAIT,YAAY,EAAU;;EAE9CU,QAAQA,CAAA;IACN,IAAI,CAACC,oBAAoB,GAAG,IAAI,CAACN,SAAS,CACzCO,IAAI,CACHV,YAAY,CAAC,GAAG,CAAC,CAClB,CACAW,SAAS,CAAEC,KAAK,IAAG;MAClB,IAAI,CAACL,UAAU,CAACM,IAAI,CAAED,KAAK,CAAE;IAC/B,CAAC,CAAC;EACJ;EAEAE,WAAWA,CAAA;IACT,IAAI,CAACL,oBAAoB,EAAEM,WAAW,EAAE;EAC1C;EAEAC,SAASA,CAAEJ,KAAa;IACtB,IAAI,CAACN,OAAO,CAACO,IAAI,CAAED,KAAK,CAAE;EAC5B;EAEAK,UAAUA,CAAEC,UAAkB;IAC5B,IAAI,CAACf,SAAS,CAACgB,IAAI,CAAED,UAAU,CAAE;EACnC;;SArCWjB,kBAAkB;;mBAAlBA,MAAkB;AAAA;;QAAlBA,MAAkB;EAAAmB,SAAA;EAAAC,MAAA;IAAAjB,WAAA;IAAAC,YAAA;EAAA;EAAAiB,OAAA;IAAAhB,OAAA;IAAAC,UAAA;EAAA;EAAAgB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCR/BE,EAAA,CAAAC,cAAA,kBAOC;MAFCD,EAAA,CAAAE,UAAA,mBAAAC,mDAAA;QAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAAN,EAAA,CAAAO,WAAA;QAAA,OAASP,EAAA,CAAAQ,WAAA,CAAAT,GAAA,CAAAZ,UAAA,CAAAmB,GAAA,CAAAxB,KAAA,CAA4B;MAAA,EAAC;MALxCkB,EAAA,CAAAS,YAAA,EAOC;;;MAJCT,EAAA,CAAAU,UAAA,UAAAX,GAAA,CAAAxB,YAAA,CAAsB,gBAAAwB,GAAA,CAAAzB,WAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}