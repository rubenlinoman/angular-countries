{"ast":null,"code":"var _class;\nimport { catchError, map, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CountriesService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://restcountries.com/v3.1';\n  }\n  getCountriesRequest(url) {\n    return this.http.get(url).pipe(catchError(error => of([])));\n  }\n  searchCountryByAlphaCode(code) {\n    const url = `${this.apiUrl}/alpha/${code}`;\n    return this.http.get(url).pipe(map(countries => countries.length > 0 ? countries[0] : null), catchError(error => of(null)) // Devolver un arreglo vacío para seguir con el programa en caso de error\n    );\n  }\n\n  searchCapital(term) {\n    const url = `${this.apiUrl}/capital/${term}`;\n    return this.getCountriesRequest(url);\n  }\n  searchCountry(term) {\n    const url = `${this.apiUrl}/name/${term}`;\n    return this.getCountriesRequest(url);\n  }\n  searchRegion(region) {\n    const url = `${this.apiUrl}/region/${region}`;\n    return this.getCountriesRequest(url);\n  }\n}\n_class = CountriesService;\n_class.ɵfac = function CountriesService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","map","of","CountriesService","constructor","http","apiUrl","getCountriesRequest","url","get","pipe","error","searchCountryByAlphaCode","code","countries","length","searchCapital","term","searchCountry","searchRegion","region","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/media/rubenlinoman/DATOS/Formacion_angular/Angular/04-countryApp/src/app/countries/services/countries.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, catchError, delay, map, of } from 'rxjs';\n\n\nimport { Country } from '../interfaces/country';\n\n@Injectable({providedIn: 'root'})\nexport class CountriesService {\n\n  private apiUrl: string = 'https://restcountries.com/v3.1';\n\n  constructor(private http: HttpClient) { }\n\n  private getCountriesRequest(url: string): Observable<Country[]> {\n    return this.http.get<Country[]>(url)\n    .pipe(\n      catchError(error => of([])), // Devolver un arreglo vacío para seguir con el programa en caso de error   \n    );\n  }\n\n  searchCountryByAlphaCode(code: string): Observable<Country | null> {\n\n    const url = `${this.apiUrl}/alpha/${code}`;\n\n    return this.http.get<Country[]>(url)\n      .pipe(\n        map(countries => countries.length > 0 ? countries[0] : null),\n        catchError(error => of(null)) // Devolver un arreglo vacío para seguir con el programa en caso de error\n      );\n  }\n\n  searchCapital(term: string): Observable<Country[]> {\n    const url = `${this.apiUrl}/capital/${term}`;\n\n    return this.getCountriesRequest(url);\n  }\n\n  searchCountry(term: string): Observable<Country[]> {\n    const url = `${this.apiUrl}/name/${term}`;\n\n    return this.getCountriesRequest(url);\n  }\n\n  searchRegion(region: string): Observable<Country[]> {\n    const url = `${this.apiUrl}/region/${region}`;\n\n    return this.getCountriesRequest(url);\n  }\n  \n}"],"mappings":";AAEA,SAAqBA,UAAU,EAASC,GAAG,EAAEC,EAAE,QAAQ,MAAM;;;AAM7D,OAAM,MAAOC,gBAAgB;EAI3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAW,gCAAgC;EAEjB;EAEhCC,mBAAmBA,CAACC,GAAW;IACrC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAYD,GAAG,CAAC,CACnCE,IAAI,CACHV,UAAU,CAACW,KAAK,IAAIT,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B;EACH;EAEAU,wBAAwBA,CAACC,IAAY;IAEnC,MAAML,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,UAAUO,IAAI,EAAE;IAE1C,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAAYD,GAAG,CAAC,CACjCE,IAAI,CACHT,GAAG,CAACa,SAAS,IAAIA,SAAS,CAACC,MAAM,GAAG,CAAC,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAC5Dd,UAAU,CAACW,KAAK,IAAIT,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;KAC/B;EACL;;EAEAc,aAAaA,CAACC,IAAY;IACxB,MAAMT,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,YAAYW,IAAI,EAAE;IAE5C,OAAO,IAAI,CAACV,mBAAmB,CAACC,GAAG,CAAC;EACtC;EAEAU,aAAaA,CAACD,IAAY;IACxB,MAAMT,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,SAASW,IAAI,EAAE;IAEzC,OAAO,IAAI,CAACV,mBAAmB,CAACC,GAAG,CAAC;EACtC;EAEAW,YAAYA,CAACC,MAAc;IACzB,MAAMZ,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,WAAWc,MAAM,EAAE;IAE7C,OAAO,IAAI,CAACb,mBAAmB,CAACC,GAAG,CAAC;EACtC;;SAxCWL,gBAAgB;;mBAAhBA,MAAgB,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAhBrB,MAAgB;EAAAsB,OAAA,EAAhBtB,MAAgB,CAAAuB,IAAA;EAAAC,UAAA,EADJ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}